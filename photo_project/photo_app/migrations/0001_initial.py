# Generated by Django 3.2.5 on 2022-03-22 01:02

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import photo_app.fields.phone_field
import photo_app.models.image_model
import photo_app.models.release_model


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('dob', models.DateField(default=None, null=True)),
                ('city', models.CharField(max_length=150)),
                ('is_model', models.BooleanField(default=True)),
                ('is_photographer', models.BooleanField(default=False)),
                ('nickname', models.CharField(default=None, max_length=100, null=True)),
                ('post_code', models.CharField(max_length=10)),
                ('phone', photo_app.fields.phone_field.PhoneField(default=None, max_length=31, null=True)),
                ('state', models.CharField(max_length=3)),
                ('street', models.CharField(max_length=150)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(default='', max_length=255)),
                ('display_image', models.IntegerField(null=True)),
                ('is_mature', models.BooleanField(default=False)),
                ('is_public', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('public_date', models.DateField(default=None, null=True)),
                ('shoot_date', models.DateField(default=None, null=True)),
                ('owner', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='gallery_owner', to=settings.AUTH_USER_MODEL)),
                ('photographer', models.ManyToManyField(default=None, related_name='photographers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LinkCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ReleaseTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=100)),
                ('file', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('compensation', models.IntegerField(default=None, null=True)),
                ('file', models.FileField(upload_to=photo_app.models.release_model.content_file_name)),
                ('name', models.CharField(max_length=100)),
                ('is_mature', models.BooleanField(default=False)),
                ('contains_mature', models.BooleanField(default=False)),
                ('shoot_date', models.DateField(default=None, null=True)),
                ('state', models.CharField(choices=[('pending', 'pending'), ('agreed', 'agreed'), ('complete', 'complete'), ('canceled', 'canceled')], max_length=20, null=True)),
                ('update_date', models.DateTimeField(auto_now=True)),
                ('use_first_name', models.BooleanField(default=True)),
                ('use_full_name', models.BooleanField(default=True)),
                ('use_nickname', models.BooleanField(default=True)),
                ('use_links', models.BooleanField(default=False)),
                ('talent_can_post', models.BooleanField(default=True)),
                ('talent_first_name', models.CharField(default=None, max_length=50, null=True)),
                ('talent_nickname', models.CharField(default=None, max_length=100, null=True)),
                ('talent_full_name', models.CharField(default=None, max_length=100, null=True)),
                ('talent_signature', models.ImageField(default=None, null=True, upload_to='signatures/%Y/%m/%d/')),
                ('photographer_signature', models.ImageField(default=None, null=True, upload_to='signatures/%Y/%m/%d/')),
                ('photographer', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='release_photographer', to=settings.AUTH_USER_MODEL)),
                ('talent', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='release_talent', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='photo_app.releasetemplate')),
            ],
        ),
        migrations.CreateModel(
            name='Links',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField()),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='photo_app.linkcategory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('camera_make', models.CharField(default=None, max_length=50)),
                ('camera_model', models.CharField(default=None, max_length=50)),
                ('filename', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to=photo_app.models.image_model.content_file_name)),
                ('height', models.IntegerField()),
                ('orientation', models.IntegerField()),
                ('privacy_level', models.CharField(choices=[('photographer', 'Photographer Only'), ('private', 'Private'), ('public', 'Public')], default='private', max_length=40, null=True)),
                ('tags', models.CharField(max_length=255)),
                ('taken', models.DateTimeField(blank=True, default=None, null=True)),
                ('thumb', models.ImageField(upload_to=photo_app.models.image_model.thumb_file_name)),
                ('thumb_width', models.IntegerField()),
                ('width', models.IntegerField()),
                ('gallery', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='photo_app.gallery')),
            ],
        ),
        migrations.AddField(
            model_name='gallery',
            name='release',
            field=models.ManyToManyField(related_name='releases', to='photo_app.Release'),
        ),
    ]
